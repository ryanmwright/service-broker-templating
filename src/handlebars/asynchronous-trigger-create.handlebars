CREATE TRIGGER [{{schema}}].[{{name}}]
	ON [{{schema}}].[{{tableName}}] FOR UPDATE, INSERT, DELETE
AS
BEGIN

	SET NOCOUNT ON
	
	DECLARE @InsertedExists BIT = (CASE WHEN EXISTS (SELECT 1 FROM INSERTED)
								THEN 1 ELSE 0 END)
	DECLARE @DeletedExists BIT = (CASE WHEN EXISTS(SELECT 1 FROM DELETED)
								THEN 1 ELSE 0 END)

	-- No rows updated, do nothing
	IF @InsertedExists = 0 AND @DeletedExists = 0
	BEGIN
		RETURN;
	END

	DECLARE @data {{#if json}}NVARCHAR(MAX){{else}}XML{{/if}};
	DECLARE @ActionCode CHAR(1);
	DECLARE @UpdateId UNIQUEIDENTIFIER = NEWID();
	DECLARE @CurrentDate DATETIME2 = SYSUTCDATETIME();
	DECLARE @ContextUserName VARCHAR(50) = SUSER_SNAME();

	-- 
	-- Generate the and send the update notification
	-- 
	IF @InsertedExists = 1
	BEGIN

		IF @DeletedExists = 1
			SET @ActionCode = 'U'
		ELSE
			SET @ActionCode = 'I'

		-- INSERT/UPDATE operation
		SET @data = (SELECT 

			-- Global details
			'{{tableName}}' AS TableName,
			'{{schema}}' AS TableSchema,
			@CurrentDate AS OperationDate,
			@ContextUserName AS ContextUserName,
			@ActionCode AS ActionCode,
			@UpdateId AS UpdateId,

			(SELECT {{#each columns}}i.[{{name}}] AS [{{~#if alias~}}{{alias}}{{else}}{{name}}{{/if}}]{{#unless @last}}, 
     				{{/unless}}{{/each}}
				FROM INSERTED AS i
			{{#if json}}FOR JSON PATH{{else}}FOR XML PATH('{{collectionElementName}}'), TYPE{{/if}}) AS [{{collectionName}}]
		
		{{#if json}}FOR JSON PATH, WITHOUT_ARRAY_WRAPPER{{else}}FOR XML PATH('{{rootElement}}'){{/if}})

	END ELSE BEGIN

		SET @ActionCode = 'D'

		-- DELETE operation
		SET @data = (SELECT 

			-- Global details
			'{{tableName}}' AS TableName,
			'{{schema}}' AS TableSchema,
			@CurrentDate AS OperationDate,
			@ContextUserName AS ContextUserName,
			@ActionCode AS ActionCode,
			@UpdateId AS UpdateId,

			(SELECT {{#each columns}}i.[{{name}}] AS [{{~#if alias~}}{{alias}}{{else}}{{name}}{{/if}}]{{#unless @last}}, 
     				{{/unless}}{{/each}}
				FROM DELETED AS d
			{{#if json}}FOR JSON PATH{{else}}FOR XML PATH('{{collectionElementName}}'), TYPE{{/if}}) AS [{{collectionName}}]
		
		{{#if json}}FOR JSON PATH, WITHOUT_ARRAY_WRAPPER{{else}}FOR XML PATH('{{rootElement}}'){{/if}})

	END

	EXEC {{#if sendMessageProcSchema}}[{{sendMessageProcSchema}}].{{/if}}[{{sendMessageProcName}}] @endpoint='{{endpoint}}', {{#if json}}@nvarchar=@data{{else}}@xml=@data{{/if}}

END

GO

sp_settriggerorder @triggername = '[{{schema}}].[{{name}}]', @order = 'last', @stmttype = 'INSERT'
sp_settriggerorder @triggername = '[{{schema}}].[{{name}}]', @order = 'last', @stmttype = 'UPDATE'
sp_settriggerorder @triggername = '[{{schema}}].[{{name}}]', @order = 'last', @stmttype = 'DELETE'
